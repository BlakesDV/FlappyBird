//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input System/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""PlayerMov"",
            ""id"": ""b49cd2cc-1683-4c89-b3b3-e76a2e2e0b9a"",
            ""actions"": [
                {
                    ""name"": ""MovimientoBasico"",
                    ""type"": ""Value"",
                    ""id"": ""6ab160a8-db3a-4792-9614-51b23e969928"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Value"",
                    ""id"": ""bbd77c77-9dfd-4c82-bdb4-78a139038fa7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Movimientos"",
                    ""id"": ""202fe35e-71d1-41b1-8bf7-8e14a70540cc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoBasico"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f7b3ff9b-8c10-48d8-96c2-0bf4a204d198"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoBasico"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""17fba91e-21f6-4036-978f-1527e9320de2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoBasico"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""78b7a6ae-62ec-4c81-8cb9-ef2caaad223b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoBasico"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8309dd65-2651-4c08-ab78-5729202d3fe9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovimientoBasico"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""71c83b39-6797-471a-8e68-36c09b490b9e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a7ecec73-f789-4bb7-83ea-f4f79aa41497"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a640080e-1268-4011-a076-7819abeb6f18"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cdae1d62-2d11-4193-859c-a09614a9fd09"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6c6015fa-aa9f-4cf0-a1fb-80a79015356c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerMov
        m_PlayerMov = asset.FindActionMap("PlayerMov", throwIfNotFound: true);
        m_PlayerMov_MovimientoBasico = m_PlayerMov.FindAction("MovimientoBasico", throwIfNotFound: true);
        m_PlayerMov_Shoot = m_PlayerMov.FindAction("Shoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMov
    private readonly InputActionMap m_PlayerMov;
    private List<IPlayerMovActions> m_PlayerMovActionsCallbackInterfaces = new List<IPlayerMovActions>();
    private readonly InputAction m_PlayerMov_MovimientoBasico;
    private readonly InputAction m_PlayerMov_Shoot;
    public struct PlayerMovActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerMovActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovimientoBasico => m_Wrapper.m_PlayerMov_MovimientoBasico;
        public InputAction @Shoot => m_Wrapper.m_PlayerMov_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMov; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMovActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMovActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMovActionsCallbackInterfaces.Add(instance);
            @MovimientoBasico.started += instance.OnMovimientoBasico;
            @MovimientoBasico.performed += instance.OnMovimientoBasico;
            @MovimientoBasico.canceled += instance.OnMovimientoBasico;
            @Shoot.started += instance.OnShoot;
            @Shoot.performed += instance.OnShoot;
            @Shoot.canceled += instance.OnShoot;
        }

        private void UnregisterCallbacks(IPlayerMovActions instance)
        {
            @MovimientoBasico.started -= instance.OnMovimientoBasico;
            @MovimientoBasico.performed -= instance.OnMovimientoBasico;
            @MovimientoBasico.canceled -= instance.OnMovimientoBasico;
            @Shoot.started -= instance.OnShoot;
            @Shoot.performed -= instance.OnShoot;
            @Shoot.canceled -= instance.OnShoot;
        }

        public void RemoveCallbacks(IPlayerMovActions instance)
        {
            if (m_Wrapper.m_PlayerMovActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMovActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMovActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMovActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMovActions @PlayerMov => new PlayerMovActions(this);
    public interface IPlayerMovActions
    {
        void OnMovimientoBasico(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
